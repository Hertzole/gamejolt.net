name: SonarCloud Scan
on:
  workflow_call:
    secrets:
      unity_license:
        required: true
      access_token:
        required: true
      sonar_token:
        required: true
    inputs:
      cache_key:
        type: string
        required: true
      unity_container:
        type: string
        required: true
      net_test_reports:
        type: string
        required: false
        default: ''

env:
  SONAR_TOKEN: ${{ secrets.sonar_token }}
  UNITY_LICENSE: ${{ secrets.unity_license }}

jobs:
  scan:
    name: SonarScan
    runs-on: ubuntu-latest
    container: ${{ inputs.unity_container }}
    steps:
      - name: Activate Unity
        continue-on-error: true
        run: |
          echo "$UNITY_LICENSE" | tr -d '\r' > License.ulf
          unity-editor -nographics -logFile /dev/stdout -manualLicenseFile License.ulf -quit

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache library
        uses: actions/cache@v3.0.11
        with:
          path: ./Unity/Library
          key: ${{ inputs.cache_key }}

      - name: Install .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            5
            6
            7
            8

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install scanner
        run: |
          dotnet tool install dotnet-sonarscanner --tool-path .

      - name: Generate Solution
        run: unity-editor -nographics -logFile /dev/stdout -customBuildName Unity -projectPath ./Unity/ -executeMethod GitTools.Solution.Sync -quit

      - name: Get test reports
        if: ${{ inputs.net_test_reports != '' }}
        uses: actions/download-artifact@v4
        with:
          name: "${{ inputs.net_test_reports }}"
          path: TestResults/net/

      - name: Get Unity test reports
        uses: actions/download-artifact@v4
        with:
          path: TestResults/unity/
          pattern: unity-*-test-results

      - name: Get Unity coverage reports
        uses: actions/download-artifact@v4
        with:
          path: Coverage/unity/
          pattern: unity-*-coverage
          
      # The test results have a different path than what SonarQube can read.
      # We need to remove the github/workspace/ path.
      - name: Fix paths
        run: |
          chmod +x ./ci/fix_paths.sh
          ./ci/fix_paths.sh

      - name: Run scanner
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
        run: |
          ./dotnet-sonarscanner begin \
            /o:hertzole \
            /k:hertzole_gamejolt-net \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.token="${{ secrets.sonar_token }}" \
            /d:sonar.cs.nunit.reportsPaths="TestResults/unity/**.xml" \
            /d:sonar.cs.vstest.reportsPaths="TestResults/net/TestResults.trx" \
            /d:sonar.cs.opencover.reportsPaths="Coverage/unity/**.xml","TestResults/**opencover.xml"
          dotnet build
          ./dotnet-sonarscanner end /d:sonar.token="${{ secrets.sonar_token }}"
